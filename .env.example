# Milvus Configuration
MILVUS_URI="grpc://localhost:19530"
MILVUS_TOKEN="" # Optional: Your Milvus API key/token if authentication is enabled
MILVUS_COLLECTION_NAME="rag_documents" # Default collection name

# Embedding Model Configuration
# Select ONE embedding provider
# Options: openai, huggingface, qwen, ollama, jina, custom
EMBEDDING_PROVIDER="openai"

# OpenAI Embeddings (Required if EMBEDDING_PROVIDER="openai")
OPENAI_API_KEY="sk-xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx"
OPENAI_EMBEDDING_MODEL_NAME="text-embedding-ada-002"

# HuggingFace Embeddings (Required if EMBEDDING_PROVIDER="huggingface")
# Uses sentence-transformers library
HUGGINGFACE_MODEL_NAME="sentence-transformers/all-MiniLM-L6-v2"

# Qwen Embeddings (via Dashscope) (Required if EMBEDDING_PROVIDER="qwen")
# Uses DASHSCOPE_API_KEY (defined below in LLM section)
QWEN_EMBEDDING_MODEL_NAME="text-embedding-v2"

# Ollama Embeddings (Required if EMBEDDING_PROVIDER="ollama")
OLLAMA_BASE_URL="http://localhost:11434" # Your Ollama server URL
OLLAMA_EMBEDDING_MODEL="nomic-embed-text" # Example: Specify the Ollama model to use for embeddings

# Jina AI Embeddings (Required if EMBEDDING_PROVIDER="jina")
JINA_API_KEY="jina_xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx"
JINA_EMBEDDING_MODEL="jina-embeddings-v2-base-en"

# Custom Local Model (Required if EMBEDDING_PROVIDER="custom")
# CUSTOM_EMBEDDING_MODEL_PATH="/path/to/your/local/embedding/model"
# CUSTOM_EMBEDDING_MODEL_KWARGS='{"device": "cpu"}' # Optional: JSON string for kwargs passed to HuggingFaceEmbeddings

# --- LLM Configuration --- #
# Select the default LLM provider
# Options: openai, deepseek, qwen
DEFAULT_LLM_PROVIDER="openai"

# OpenAI LLM (Required if DEFAULT_LLM_PROVIDER="openai")
# Uses the same OPENAI_API_KEY as embeddings if provider is openai
OPENAI_MODEL_NAME="gpt-3.5-turbo"

# DeepSeek LLM (Required if DEFAULT_LLM_PROVIDER="deepseek")
# DEEPSEEK_API_KEY="your-deepseek-api-key"
# DEEPSEEK_MODEL_NAME="deepseek-chat" # Or another DeepSeek model

# Qwen LLM (via Dashscope) (Required if DEFAULT_LLM_PROVIDER="qwen")
# DASHSCOPE_API_KEY="sk-xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx" # Also used for Qwen embeddings
# QWEN_MODEL_NAME="qwen-turbo" # Or another Qwen model

# --- General Settings --- #
PROJECT_NAME="Enterprise RAG System"
PROJECT_VERSION="0.1.0"
LOG_LEVEL="INFO" # e.g., DEBUG, INFO, WARNING, ERROR

# --- Advanced Milvus Settings --- #
MILVUS_TEXT_MAX_LENGTH=65535 # Max length for text fields in Milvus schema
MILVUS_CONSISTENCY_LEVEL="Bounded" # Milvus consistency level
# Optional: Define Milvus index params as a JSON string
# MILVUS_INDEX_PARAMS='{"metric_type":"L2","index_type":"AUTOINDEX","params":{}}'

# --- Advanced Embedding Settings --- #
EMBEDDING_DEVICE="cpu" # Device for embeddings (e.g., "cpu", "cuda", "mps")

# --- RAG Service Configuration --- #
RETRIEVER_TOP_K=5 # Default number of documents to retrieve
# Optional: Configure Cohere API Key if using 'rerank' strategy
# COHERE_API_KEY="your_cohere_api_key"

# --- API Server Configuration --- #
API_HOST="0.0.0.0"
API_PORT=8000
CORS_ORIGINS="*" # Comma-separated list of allowed origins, or "*" for all

# --- Celery & Redis Configuration --- #
CELERY_BROKER_URL="redis://localhost:6379/0" # Redis for Celery message broker
CELERY_RESULT_BACKEND="redis://localhost:6379/1" # Redis for Celery results
UPLOAD_TEMP_DIR="/tmp/rag_uploads" # Temporary directory for file uploads
REDIS_URL="redis://localhost:6379/2" # Redis for conversation history 